### 2023
setwd("C:/Users/SIGEH/Desktop/Lalo/Gob/Proyectos")
### 2023
setwd("C:/Users/eagel/OneDrive/Escritorio/Lalo/Escuela/Gob/Interes/Accidentes_Mapa_prueba")
### 2023
setwd("C:/Users/eagel/OneDrive/Escritorio/Lalo/Escuela/Gob/Interes/Accidentes_Mapa_prueba/")
datos = sf::read_sf("Datos/Sin filtrar/2023_shp/conjunto_de_datos/BASE MUNICIPAL_ACCIDENTES DE TRANSITO GEORREFERENCIADOS_2023.shp")
tipaccid_correcion = function(str) {
return(switch(as.character(str),
"0" = "Certificado cero",
"1" = "Colisión con vehículo automotor",
"2" = "Colisión con peatón (atropellamiento)",
"3" = "Colisión con animal",
"4" = "Colisión con objeto fijo",
"5" = "Volcadura",
"6" = "Caída de pasajero",
"7" = "Salida del camino",
"8" = "Incendio",
"9" = "Colisión con ferrocarril",
"10" = "Colisión con motocicleta",
"11" = "Colisión con ciclista",
"12" = "Otro",
str  # valor por defecto si no hay coincidencia
))
}
clase_correcion = function(str) {
return(switch(as.character(str),
"1" = "Fatal",
"2" = "No fatal",
"3" = "Sólo daños",
str  # valor por defecto si no hay coincidencia
))
}
edo_correcion = function(str) {
return(switch(as.character(str),
"13" = "Hidalgo",
str  # valor por defecto si no hay coincidencia
))
}
sexo_correcion = function(str) {
return(switch(as.character(str),
"1" = "Se fugó",
"2" = "Hombre",
"3" = "Mujer",
str  # valor por defecto si no hay coincidencia
))
}
causaacci_correcion = function(str) {
return(switch(as.character(str),
"1" = "Conductor",
"2" = "Peatón o pasajero",
"3" = "Falla del vehículo",
"4" = "Mala condición del camino",
"5" = "Otra",
str  # valor por defecto si no hay coincidencia
))
}
datos = datos |> dplyr::select(TIPACCID, CLASE, ANIO, MES, DIA, HORA, MINUTOS, EDO, MPIO, SEXO, EDAD, CAUSAACCI) |> dplyr::filter(EDO == 13)
datos$TIPACCID = sapply(datos$TIPACCID, tipaccid_correcion, simplify = T, USE.NAMES = F)
datos$CLASE = sapply(datos$CLASE, clase_correcion, simplify = T, USE.NAMES = F)
datos$EDO = sapply(datos$EDO, edo_correcion, simplify = T, USE.NAMES = F)
datos$SEXO = sapply(datos$SEXO, sexo_correcion, simplify = T, USE.NAMES = F)
datos$CAUSAACCI = sapply(datos$CAUSAACCI, causaacci_correcion, simplify = T, USE.NAMES = F)
mun = sf::read_sf("../Importantes_documentos_usar/Municipios/municipiosjair.shp")
datos = sf::read_sf("Datos/Sin filtrar/2023_shp/conjunto_de_datos/BASE MUNICIPAL_ACCIDENTES DE TRANSITO GEORREFERENCIADOS_2023.shp")
datos = datos |> dplyr::select(TIPACCID, CLASE, ANIO, MES, DIA, HORA, MINUTOS, EDO, MPIO, SEXO, EDAD, CAUSAACCI) |> dplyr::filter(EDO == 13)
datos$TIPACCID = sapply(datos$TIPACCID, tipaccid_correcion, simplify = T, USE.NAMES = F)
datos$CLASE = sapply(datos$CLASE, clase_correcion, simplify = T, USE.NAMES = F)
datos$EDO = sapply(datos$EDO, edo_correcion, simplify = T, USE.NAMES = F)
datos$SEXO = sapply(datos$SEXO, sexo_correcion, simplify = T, USE.NAMES = F)
datos$CAUSAACCI = sapply(datos$CAUSAACCI, causaacci_correcion, simplify = T, USE.NAMES = F)
mun = sf::read_sf("../../Importantes_documentos_usar/Municipios/municipiosjair.shp")
mun = mun |> dplyr::select(CVE_MUN, NOM_MUN) |> sf::st_drop_geometry()
datos = merge(x = datos |> dplyr::mutate(MPIO = as.numeric(MPIO)) , y = mun |> dplyr::mutate(CVE_MUN = as.numeric(CVE_MUN)), by.x = "MPIO", by.y = "CVE_MUN")
datos = datos |> dplyr::select(TIPACCID, CLASE, ANIO, MES, DIA, HORA, MINUTOS, EDO, NOM_MUN, SEXO, EDAD, CAUSAACCI) |>
dplyr::arrange(ANIO, MES, DIA, HORA, MINUTOS)
datos = datos[- 2076, ]
View(datos)
datos$NOM_MUN |> unique()
datos$SEXO |> unique()
datos = datos |> dplyr::filter(NOM_MUN == "Mineral de la Reforma") |> dplyr::filter(SEXO == "Mujer")
View(datos)
plot(datos$geometry)
View(datos)
### 2023
setwd("C:/Users/eagel/OneDrive/Escritorio/Lalo/Escuela/Gob/Interes/Accidentes_Mapa_prueba")
datos = sf::read_sf("Datos/Sin filtrar/2023_shp/conjunto_de_datos/BASE MUNICIPAL_ACCIDENTES DE TRANSITO GEORREFERENCIADOS_2023.shp")
mun = sf::read_sf("../../Importantes_documentos_usar/Municipios/municipiosjair.shp")
datos = datos |> dplyr::select(TIPACCID, CLASE, ANIO, MES, DIA, HORA, MINUTOS, EDO, MPIO, SEXO, EDAD, CAUSAACCI) |> dplyr::filter(EDO == 13)
datos$TIPACCID = sapply(datos$TIPACCID, tipaccid_correcion, simplify = T, USE.NAMES = F)
datos$CLASE = sapply(datos$CLASE, clase_correcion, simplify = T, USE.NAMES = F)
datos$EDO = sapply(datos$EDO, edo_correcion, simplify = T, USE.NAMES = F)
datos$SEXO = sapply(datos$SEXO, sexo_correcion, simplify = T, USE.NAMES = F)
datos$CAUSAACCI = sapply(datos$CAUSAACCI, causaacci_correcion, simplify = T, USE.NAMES = F)
mun = mun |> dplyr::select(CVE_MUN, NOM_MUN) |> sf::st_drop_geometry()
datos = merge(x = datos |> dplyr::mutate(MPIO = as.numeric(MPIO)) , y = mun |> dplyr::mutate(CVE_MUN = as.numeric(CVE_MUN)), by.x = "MPIO", by.y = "CVE_MUN")
datos = datos |> dplyr::select(TIPACCID, CLASE, ANIO, MES, DIA, HORA, MINUTOS, EDO, NOM_MUN, SEXO, EDAD, CAUSAACCI) |>
dplyr::arrange(ANIO, MES, DIA, HORA, MINUTOS)
plot(datos$geometry)
View(datos)
